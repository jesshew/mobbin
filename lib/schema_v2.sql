-- Schema Version 2
-- Description: Database schema that works

-- Drop tables in dependency order
DROP TABLE IF EXISTS annotation_element CASCADE;
DROP TABLE IF EXISTS annotation_version CASCADE;
DROP TABLE IF EXISTS screenshot CASCADE;
DROP TABLE IF EXISTS batch CASCADE;
DROP TABLE IF EXISTS taxonomy CASCADE;

-- Taxonomy: shared label definitions for UI elements
CREATE TABLE taxonomy (
    taxonomy_id SERIAL PRIMARY KEY,
    taxonomy_label_name TEXT NOT NULL,       -- e.g., 'Button'
    taxonomy_description TEXT,               -- explanation/usage notes
    taxonomy_created_at TIMESTAMPTZ NOT NULL DEFAULT NOW()
);

-- Batch: groups of uploaded screenshots with performance data
CREATE TABLE batch (
    batch_id SERIAL PRIMARY KEY,
    batch_name TEXT NOT NULL,             -- batch name from the UI
    batch_created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    batch_status TEXT NOT NULL CHECK (batch_status IN ('uploading', 'extracting', 'annotating', 'preview', 'done')),
    batch_analysis_type TEXT NOT NULL CHECK (batch_analysis_type IN ('Usability Audit', 'Conversion Analysis', 'UI Categorization')),
    batch_master_prompt_runtime NUMERIC,  -- in seconds
    batch_total_inference_time NUMERIC,   -- in seconds
    batch_detected_elements_count INTEGER, -- number of detected UI elements
    batch_description TEXT                -- optional metadata
);

-- Screenshot: individual UI images; file_url is generated by Supabase Storage
CREATE TABLE screenshot (
    screenshot_id SERIAL PRIMARY KEY,
    batch_id INTEGER REFERENCES batch(batch_id) ON DELETE CASCADE,
    screenshot_file_name TEXT NOT NULL,
    screenshot_file_url TEXT NOT NULL,         -- full public URL from Supabase Storage
    screenshot_processing_status TEXT NOT NULL CHECK (screenshot_processing_status IN ('pending', 'processing', 'completed', 'error')),
    screenshot_processing_time INTERVAL,       -- time taken to annotate this image
    screenshot_created_at TIMESTAMPTZ NOT NULL DEFAULT NOW()
);

-- Annotation Version: versioning for screenshot annotations
CREATE TABLE annotation_version (
    annotation_version_id SERIAL PRIMARY KEY,
    screenshot_id INTEGER REFERENCES screenshot(screenshot_id) ON DELETE CASCADE,
    annotation_version_number INTEGER NOT NULL,  -- starts at 1 and increments
    annotation_version_created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    CONSTRAINT unique_version_per_screenshot UNIQUE (screenshot_id, annotation_version_number)
);

-- Annotation Element: details for each UI element annotation
CREATE TABLE annotation_element (
    annotation_element_id SERIAL PRIMARY KEY,
    annotation_version_id INTEGER REFERENCES annotation_version(annotation_version_id) ON DELETE CASCADE,
    annotation_element_x_min NUMERIC NOT NULL,             -- x-coordinate (top-left)
    annotation_element_x_max NUMERIC NOT NULL,             -- to get bounding box width
    annotation_element_y_min NUMERIC NOT NULL,             -- y-coordinate
    annotation_element_y_max NUMERIC NOT NULL,             -- to get bounding box height
    taxonomy_id INTEGER REFERENCES taxonomy(taxonomy_id),  -- shared label definition
    annotation_element_text_label TEXT,                -- display text (from UI)
    annotation_element_description TEXT,               -- additional element description
    annotation_element_inference_time NUMERIC NOT NULL -- detection time in seconds
);

-- Add indexes for common queries and foreign keys
CREATE INDEX idx_screenshot_batch ON screenshot(batch_id);
CREATE INDEX idx_annotation_version_screenshot ON annotation_version(screenshot_id);
CREATE INDEX idx_annotation_element_version ON annotation_element(annotation_version_id);
CREATE INDEX idx_annotation_element_taxonomy ON annotation_element(taxonomy_id); 